defaults: &defaults
  working_directory: ~/repo
  environment:
    MAVEN_OPTS: -server -showversion -XX:+PrintCommandLineFlags -XX:+UseCodeCacheFlushing -Xms1024M -Xmx2048M -XX:+CMSClassUnloadingEnabled -XX:-OmitStackTraceInFastThrow -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSConcurrentMTEnabled -XX:+CMSParallelRemarkEnabled -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=70 -XX:+ScavengeBeforeFullGC -XX:+CMSScavengeBeforeRemark -XX:NewSize=600m -XX:MaxNewSize=900m -XX:SurvivorRatio=10 -XX:+DisableExplicitGC -Djava.security.egd=file:/dev/./urandom

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      - image: killbill/kbbuild:0.1.0
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Setup dependencies
          command: |
            if [ "${CIRCLE_BRANCH}" == "work-for-release-0.19.x" ]; then
              for i in killbill-oss-parent killbill-api killbill-plugin-api killbill-commons killbill-platform
                echo "*** Setting up $i"
                mkdir -p /home/killbill/$i
                git clone https://github.com/killbill/$i.git /home/killbill/$i
                pushd /home/killbill/$i
                mvn clean install -DskipTests=true
                popd
              done
            fi
      - run: mvn -DskipTests=true clean install dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

  test-h2:
    <<: *defaults
    docker:
      - image: killbill/kbbuild:0.1.0
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run: mvn clean install -Ptravis
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
  test-mysql:
    <<: *defaults
    docker:
      - image: killbill/kbbuild:0.1.0
      - image: killbill/mariadb:0.18
        environment:
        - MYSQL_ROOT_PASSWORD=root
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Setup latest DDL
          command: ./bin/db-helper -a create --driver mysql -u root -p root -t yes -h 127.0.0.1
      - run: mvn clean install -Plocaltest-mysql
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
  test-postgresql:
    <<: *defaults
    docker:
      - image: killbill/kbbuild:0.1.0
      - image: killbill/postgresql:0.18
        environment:
        - POSTGRES_PASSWORD=postgres
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Setup latest DDL
          command: ./bin/db-helper -a create --driver postgres -u postgres -p postgres -t yes
      - run: mvn clean install -Plocaltest-postgresql
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

workflows:
  version: 2
  build-and-test:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - work-for-release-0.19.x
      - test-h2:
          requires:
            - build
          filters:
            branches:
              only: master
      - test-mysql:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - work-for-release-0.19.x
      - test-postgresql:
          requires:
            - build
          filters:
            branches:
              only: master
